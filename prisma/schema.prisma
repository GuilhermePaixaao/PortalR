generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cargo {
  idCargo      Int           @id @default(autoincrement())
  nome         String        @unique
  funcionarios Funcionario[]

  @@map("Cargo") // Mapeia para a tabela "Cargo"
}

model Funcionario {
  id              Int        @id @default(autoincrement())
  nomeFuncionario String
  email           String     @unique
  usuario         String     @unique
  senha           String
  cargoId         Int
  createdAt       DateTime   @default(now())
  cargo           Cargo      @relation(fields: [cargoId], references: [idCargo])
  Chamados        Chamados[] // Relação: Um funcionário pode ter vários chamados

  @@map("Funcionario") // Mapeia para a tabela "Funcionario"
}

// NOVO MODEL PARA CATEGORIAS
model Categorias {
  id       Int        @id @default(autoincrement())
  nome     String     @unique
  Chamados Chamados[] // Relação: Uma categoria pode estar em vários chamados

  @@map("Categorias") // Mapeia para a tabela "Categorias"
}

// NOVO MODEL PARA CHAMADOS
model Chamados {
  id              Int        @id @default(autoincrement())
  assunto         String
  descricao       String
  prioridade      String?    @default("Média") // Permite nulo, mas tem padrão
  status          String     @default("Aberto")
  requisitante_id Int
  categoria_id    Int?       // Permite nulo
  created_at      DateTime?  @default(now())   // Permite nulo, mas tem padrão

  // RELAÇÕES
  Funcionario     Funcionario @relation(fields: [requisitante_id], references: [id])
  Categorias      Categorias? @relation(fields: [categoria_id], references: [id]) // Relação opcional

  @@map("Chamados") // Mapeia para a tabela "Chamados"
}